{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Luk'sC15\\\\coding\\\\react\\\\my-store\\\\e-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\Luk'sC15\\\\coding\\\\react\\\\my-store\\\\e-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\Luk'sC15\\\\coding\\\\react\\\\my-store\\\\e-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Luk'sC15\\\\coding\\\\react\\\\my-store\\\\e-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Luk'sC15\\\\coding\\\\react\\\\my-store\\\\e-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import FormInput from'../../components/form-imput/form-imput.component';import CustomButton from'../../components/custom-button/custom-button.component';import{googleSingInStart as _googleSingInStart,emailSingInStart as _emailSingInStart}from'../../redux/user/user.actions';import'./sign-in.styles.scss';var SignIn=function SignIn(_ref){var emailSingInStart=_ref.emailSingInStart,googleSingInStart=_ref.googleSingInStart;var _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setUserCredentials=_useState2[1];var email=userCredentials.email,password=userCredentials.password;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var email,password;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();email=userCredentials.email,password=userCredentials.password;emailSingInStart(email,password);case 3:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;setUserCredentials(_objectSpread(_objectSpread({},userCredentials),{},_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(\"div\",{className:\"sign-in\"},/*#__PURE__*/React.createElement(\"h2\",null,\"I already have an account\"),/*#__PURE__*/React.createElement(\"span\",null,\" Sign in with your email and password\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormInput,{name:\"email\",type:\"email\",value:email,handleChange:handleChange,label:\"email\",required:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"password\",type:\"password\",value:password,handleChange:handleChange,label:\"password\",required:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons\"},/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\"Sign In\"),/*#__PURE__*/React.createElement(CustomButton,{type:\"button\",onClick:googleSingInStart,isGoogleSignIn:true},\"Sign in with Google\"))));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{googleSingInStart:function googleSingInStart(){return dispatch(_googleSingInStart());},emailSingInStart:function emailSingInStart(email,password){return dispatch(_emailSingInStart({email:email,password:password}));}};};export default connect(null,mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Luk'sC15/coding/react/my-store/e-store/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSingInStart","emailSingInStart","SignIn","email","password","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"25BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CAEA,OAASC,iBAAiB,GAAjBA,CAAAA,kBAAT,CAA4BC,gBAAgB,GAAhBA,CAAAA,iBAA5B,KAAoD,+BAApD,CAEA,MAAO,uBAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA6C,IAA1CD,CAAAA,gBAA0C,MAA1CA,gBAA0C,CAAxBD,iBAAwB,MAAxBA,iBAAwB,eACVJ,QAAQ,CAAC,CAAEO,KAAK,CAAE,EAAT,CAAaC,QAAQ,CAAE,EAAvB,CAAD,CADE,wCACjDC,eADiD,eAChCC,kBADgC,kBAGhDH,CAAAA,KAHgD,CAG5BE,eAH4B,CAGhDF,KAHgD,CAGzCC,QAHyC,CAG5BC,eAH4B,CAGzCD,QAHyC,CAKxD,GAAMG,CAAAA,YAAY,2FAAG,iBAAOC,KAAP,qIACjBA,KAAK,CAACC,cAAN,GACQN,KAFS,CAEWE,eAFX,CAETF,KAFS,CAEFC,QAFE,CAEWC,eAFX,CAEFD,QAFE,CAIjBH,gBAAgB,CAACE,KAAD,CAAQC,QAAR,CAAhB,CAJiB,sDAAH,kBAAZG,CAAAA,YAAY,6CAAlB,CAOA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,KAAD,CAAW,mBACJA,KAAK,CAACG,MADF,CACpBC,KADoB,eACpBA,KADoB,CACbC,IADa,eACbA,IADa,CAG5BP,kBAAkB,gCAAKD,eAAL,wBAAuBQ,IAAvB,CAA8BD,KAA9B,GAAlB,CACH,CAJD,CAMI,mBACI,2BAAK,SAAS,CAAC,SAAf,eACI,0DADJ,cAEI,wEAFJ,cAII,4BAAM,QAAQ,CAAEL,YAAhB,eACI,oBAAC,SAAD,EACI,IAAI,CAAC,OADT,CAEI,IAAI,CAAC,OAFT,CAGI,KAAK,CAAEJ,KAHX,CAII,YAAY,CAAEO,YAJlB,CAKI,KAAK,CAAC,OALV,CAMI,QAAQ,KANZ,EADJ,cASI,oBAAC,SAAD,EACI,IAAI,CAAC,UADT,CAEI,IAAI,CAAC,UAFT,CAGI,KAAK,CAAEN,QAHX,CAII,YAAY,CAAEM,YAJlB,CAKI,KAAK,CAAC,UALV,CAMI,QAAQ,KANZ,EATJ,cAiBI,2BAAK,SAAS,CAAC,SAAf,eACI,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,YADJ,cAEI,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,CAA4B,OAAO,CAAEV,iBAArC,CAAwD,cAAc,KAAtE,wBAFJ,CAjBJ,CAJJ,CADJ,CA6BP,CA/CD,CAiDA,GAAMc,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpCf,iBAAiB,CAAE,mCAAMe,CAAAA,QAAQ,CAACf,kBAAiB,EAAlB,CAAd,EADiB,CAEpCC,gBAAgB,CAAE,0BAACE,KAAD,CAAQC,QAAR,QAAqBW,CAAAA,QAAQ,CAACd,iBAAgB,CAAC,CAAEE,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAD,CAAjB,CAA7B,EAFkB,CAAL,EAAnC,CAMA,cAAeP,CAAAA,OAAO,CAAC,IAAD,CAAOiB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../../components/form-imput/form-imput.component';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\n\r\nimport { googleSingInStart, emailSingInStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn = ({ emailSingInStart, googleSingInStart }) => {\r\n    const [userCredentials, setUserCredentials] = useState({ email: '', password: '' });\r\n\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const { email, password } = userCredentials;\r\n\r\n        emailSingInStart(email, password);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { value, name } = event.target;\r\n\r\n        setUserCredentials({...userCredentials, [name]: value });\r\n    };\r\n\r\n        return (\r\n            <div className='sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span> Sign in with your email and password</span>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormInput\r\n                        name='email'\r\n                        type='email'\r\n                        value={email}\r\n                        handleChange={handleChange}\r\n                        label='email'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        name='password'\r\n                        type='password'\r\n                        value={password}\r\n                        handleChange={handleChange}\r\n                        label='password'\r\n                        required\r\n                    />\r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'>Sign In</CustomButton>\r\n                        <CustomButton type=\"button\" onClick={googleSingInStart} isGoogleSignIn >Sign in with Google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSingInStart: () => dispatch(googleSingInStart()),\r\n    emailSingInStart: (email, password) => dispatch(emailSingInStart({ email, password }))\r\n});\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}