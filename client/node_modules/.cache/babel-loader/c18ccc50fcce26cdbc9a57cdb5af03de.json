{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Luk'sC15\\\\coding\\\\react\\\\my-store\\\\e-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"C:\\\\Users\\\\Luk'sC15\\\\coding\\\\react\\\\my-store\\\\e-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:\\\\Users\\\\Luk'sC15\\\\coding\\\\react\\\\my-store\\\\e-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyB4Fxne8h9RbSNpNIjCVHGQ6OsNDLmhkg0\",authDomain:\"e-store-8ee01.firebaseapp.com\",databaseURL:\"https://e-store-8ee01.firebaseio.com\",projectId:\"e-store-8ee01\",storageBucket:\"e-store-8ee01.appspot.com\",messagingSenderId:\"333262353367\",appId:\"1:333262353367:web:4cac1270b10241e10b5192\",measurementId:\"G-9P548FPD3T\"};firebase.initializeApp(config);export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(collectionKey);collectionRef=firestore.collection(collectionKey);console.log(collectionRef);batch=firestore.batch();objectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});_context2.next=7;return batch.commit();case 7:return _context2.abrupt(\"return\",_context2.sent);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var convertCollectionSnapshotToMap=function convertCollectionSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};// helper function to create promise for saga to be able to use and yield for. This is just a way\n// to create saga even so it is not really needed for Firebase.\nexport var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["C:/Users/Luk'sC15/coding/react/my-store/e-store/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB4Fxne8h9RbSNpNIjCVHGQ6OsNDLmhkg0\",\r\n    authDomain: \"e-store-8ee01.firebaseapp.com\",\r\n    databaseURL: \"https://e-store-8ee01.firebaseio.com\",\r\n    projectId: \"e-store-8ee01\",\r\n    storageBucket: \"e-store-8ee01.appspot.com\",\r\n    messagingSenderId: \"333262353367\",\r\n    appId: \"1:333262353367:web:4cac1270b10241e10b5192\",\r\n    measurementId: \"G-9P548FPD3T\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`); \r\n  \r\n    const snapShot = await userRef.get();\r\n\r\n    // const collectionSnapshot = await collectionRef.get();\r\n\r\n    if (!snapShot.exists) {\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        });\r\n      } catch (error) {\r\n        console.log('error creating user', error.message);\r\n      }\r\n    }\r\n  \r\n    return userRef;\r\n  };\r\n\r\n export const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n   console.log(collectionKey)\r\n  const collectionRef = firestore.collection(collectionKey);\r\n  console.log(collectionRef);\r\n\r\n  const batch = firestore.batch();\r\n  \r\n  objectsToAdd.forEach(obj => {\r\n    const newDocRef = collectionRef.doc();\r\n    \r\n    batch.set(newDocRef, obj);\r\n  })\r\n\r\n  return await batch.commit();\r\n\r\n };\r\n\r\nexport const convertCollectionSnapshotToMap = (collections) => {\r\n  const transformedCollection = collections.docs.map(doc => {\r\n    const { title, items } = doc.data();\r\n\r\n    return {\r\n      routeName: encodeURI(title.toLowerCase()),\r\n      id: doc.id,\r\n      title,\r\n      items\r\n    }\r\n  })\r\n\r\n  return transformedCollection.reduce((accumulator, collection) => {\r\n    accumulator[collection.title.toLowerCase()] = collection;\r\n    return accumulator;\r\n  }, {})\r\n};\r\n\r\n// helper function to create promise for saga to be able to use and yield for. This is just a way\r\n// to create saga even so it is not really needed for Firebase.\r\nexport const getCurrentUser = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n      unsubscribe();\r\n      resolve(userAuth);\r\n\r\n    }, reject)\r\n  })\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}